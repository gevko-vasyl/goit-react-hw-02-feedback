{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","children","className","styles","section","title","FeedbackOptions","options","handleClick","container","map","option","button","name","onClick","Statistics","good","neutral","bad","total","positivePercent","Notification","message","App","useState","setOptions","countTotalFeedback","Object","keys","e","clickedOption","target","console","log","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oOAGe,SAASA,EAAT,GAAgC,IAAbC,EAAY,EAAZA,SAChC,OACE,sBAAKC,UAAWC,IAAOC,QAAvB,UACE,oBAAIF,UAAWC,IAAOE,MAAtB,mCACCJ,K,oBCHQ,SAASK,EAAT,GAAoD,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,YACjD,OACE,oBAAIN,UAAWC,IAAOM,UAAtB,SACGF,EAAQG,KAAI,SAACC,GAAD,OACX,6BACE,wBAAQT,UAAWC,IAAOS,OAAQC,KAAMF,EAAQG,QAASN,EAAzD,SACGG,KAFIA,QCLF,SAASI,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,gBAEA,OACE,gCACE,4CACA,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,UCdS,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,8BACE,6BAAKA,MC2CIC,MA1Cf,WACE,MAA8BC,mBAAS,CACrCR,KAAM,EACNC,QAAS,EACTC,IAAK,IAHP,mBAAOX,EAAP,KAAgBkB,EAAhB,KAKQT,EAAuBT,EAAvBS,KAAMC,EAAiBV,EAAjBU,QAASC,EAAQX,EAARW,IAOjBQ,EAAqB,WACzB,OAAOV,EAAOC,EAAUC,GAO1B,OACE,eAAClB,EAAD,CAASE,UAAU,MAAnB,UACE,cAACI,EAAD,CACEC,QAASoB,OAAOC,KAAKrB,GACrBC,YAjBoB,SAACqB,GACzB,IAAIC,EAAgBD,EAAEE,OAAOlB,KAC7BmB,QAAQC,IAAIH,GACZL,EAAW,2BAAKlB,GAAN,kBAAgBuB,EAAgBvB,EAAQuB,GAAiB,QAgBhEJ,IACC,cAACX,EAAD,CACEC,KAAMA,EACNE,IAAKA,EACLD,QAASA,EACTE,MAAOO,IACPN,gBAhBgC,WACtC,IAAQJ,EAAST,EAATS,KACR,OAAOkB,KAAKC,MAAOnB,EAAOU,IAAwB,KAc3BU,KAGnB,cAACf,EAAD,CAAcC,QAAQ,0BCtC9Be,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,QAAU,2B,kBCA5BD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,OAAS,mC","file":"static/js/main.a195d055.chunk.js","sourcesContent":["import React from \"react\";\nimport styles from \"./Section.module.css\";\n\nexport default function Section({ children }) {\n  return (\n    <div className={styles.section}>\n      <h1 className={styles.title}>Please leave feedback</h1>\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./FeedbackOptions.module.css\";\n\nexport default function FeedbackOptions({ options, handleClick }) {\n  return (\n    <ul className={styles.container}>\n      {options.map((option) => (\n        <li key={option}>\n          <button className={styles.button} name={option} onClick={handleClick}>\n            {option}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercent,\n}) {\n  return (\n    <div>\n      <h2>Statistics</h2>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercent}%</p>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercent: PropTypes.number.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Notification({ message }) {\n  return (\n    <div>\n      <h3>{message}</h3>\n    </div>\n  );\n}\n\nNotification.propTypes = { message: PropTypes.string.isRequired };\n","import { useState } from \"react\";\n\nimport Section from \"components/Section/Section\";\nimport FeedbackOptions from \"components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"components/Statistics/Statistics\";\nimport Notification from \"components/Notification/Notification\";\n\nfunction App() {\n  const [options, setOptions] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  });\n  const { good, neutral, bad } = options;\n\n  const handleButtonClick = (e) => {\n    let clickedOption = e.target.name;\n    console.log(clickedOption);\n    setOptions({ ...options, [clickedOption]: options[clickedOption] + 1 });\n  };\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const { good } = options;\n    return Math.round((good / countTotalFeedback()) * 100);\n  };\n  return (\n    <Section className=\"App\">\n      <FeedbackOptions\n        options={Object.keys(options)}\n        handleClick={handleButtonClick}\n      />\n      {countTotalFeedback() ? (\n        <Statistics\n          good={good}\n          bad={bad}\n          neutral={neutral}\n          total={countTotalFeedback()}\n          positivePercent={countPositiveFeedbackPercentage()}\n        />\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </Section>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__qx71B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__1PnSB\",\"button\":\"FeedbackOptions_button__12Y5t\"};"],"sourceRoot":""}